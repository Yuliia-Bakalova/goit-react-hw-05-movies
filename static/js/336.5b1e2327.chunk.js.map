{"version":3,"file":"static/js/336.5b1e2327.chunk.js","mappings":"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","sources":["Api/api.jsx","components/FilmInfo/FilmInfo.styled.js","components/FilmInfo/FilmInfo.jsx","components/SharedLayout/SharedLayout.styled.js","components/SharedLayout/SharedLayout.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7cc6d6f36e893764d456caf842646015';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endPoint, options) {\n  try {\n    const response = await axios.get(`${endPoint}?api_key=${KEY}&${options}`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovies;\n","import styled from '@emotion/styled';\n\nconst Section = styled.section`\n  display: flex;\n  padding: 15px;\n  max-width: 990px;\n`;\nconst Img = styled.img`\n  height: 500px;\n  width: 400px;\n  border-radius: 10px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  padding: 15px;\n  padding-top: 0;\nfont-family: \"Gill Sans\", sans-serif; \n  color: #000;\n`;\nconst MovieName = styled.h1`\n  color: #3c3a5e;\n  font-size: 50px;\n  margin-bottom: 40px;\nfont-family: \"Gill Sans\", sans-serif;\n\n    \n`;\nconst Title = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 5px;\n  font-family: \"Gill Sans\", sans-serif;\n  font-size: 30px;\n`;\nconst Text = styled.p`\n  font-size: 18px;\n  display: flex;\n`;\n\nconst Wrap = styled.span`\n  margin-right: 5px;\n  height: 30px;\n`;\n\nexport { Container, Img, Section, MovieName, Text, Title, Wrap };\n","\nimport PropTypes from 'prop-types';\n\nimport {\n  Container,\n  MovieName,\n  Section,\n  Img,\n  Text,\n  Title,\n  Wrap,\n} from './FilmInfo.styled';\n\nconst FilmInfo = ({ filmDetails }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    overview,\n    vote_average,\n    title,\n    genres,\n  } = filmDetails;\n  const date = new Date(release_date).getFullYear();\n  return (\n    <Section>\n      <Img src={`https://image.tmdb.org/t/p/w400${poster_path}`} alt={title} />\n      <Container>\n        <MovieName>\n          {original_title} ({date})\n        </MovieName>\n        <Text>\n          <Wrap>\n          \n          </Wrap>\n          User score: {Math.round(vote_average * 10)}%\n        </Text>\n        <Title>Genres</Title>\n        {genres\n          ? genres.map(genre => {\n              return (\n                <Text key={genre.id}>\n                  {/* <Wrap>\n                  \n                  </Wrap> */}\n                  {genre.name}\n                </Text>\n              );\n            })\n          : 'Unknown'}\n        <Title>Overview</Title>\n        <Text>{overview}</Text>\n      </Container>\n    </Section>\n  );\n};\n\nFilmInfo.propTypes = {\n  filmDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n  }),\n};\n\nexport default FilmInfo;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nconst Link = styled(NavLink)`\n  color: #000;\n  font-family: \"Gill Sans\", sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  padding: 8px 16px;\n  border-radius: 5px;\n   transition: all 250ms linear 0s;\n  display: block;\n  margin-bottom: 20px;\n\n  :hover {\n  background-color: red;\n    color: #fff;\n  }\n\n  &.active {\n      background-color: #7d77e8;\n    color:  #032147;\n  }\n`;\nconst Section = styled.section`\n  padding: 15px 0 15px 0;\n`;\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-around;\n`;\nconst Item = styled.li``;\nconst Title = styled.h2`\n  text-align: center;\n  margin-bottom: 15px;\n    font-family: \"Gill Sans\", sans-serif;\n  font-size: 35px;\n  color: #000;\n`;\n\n\nexport { Title, Link, Section, List, Item };\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Title,\n  Link,\n  Section,\n  List,\n  Item,\n} from './SharedLayout.styled';\n\nconst SharedLayout = ({ location }) => {\n  const currentlocation = location.state?.from ?? '/';\n  return (\n    <Section>\n      <Title>Additional information</Title>\n      <List>\n        <Item>\n          <Link to=\"cast\" state={{ from: currentlocation }}>\n            Cast\n          </Link>\n        </Item>\n        <Item>\n          <Link to=\"reviews\" state={{ from: currentlocation }}>\n            Reviews\n          </Link>\n        </Item>\n      </List>\n      <Suspense\n       fallback={<div>Loading...</div>}>\n      \n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n};\n\nSharedLayout.propTypes = {\n  location: PropTypes.shape({\n    hash: PropTypes.string,\n    key: PropTypes.string,\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    state: PropTypes.object,\n  }),\n};\n\nexport default SharedLayout;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst Container = styled.main`\n  padding: 20px;\n`;\n\nconst BackLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  width: 130px;\n  color: #000;\n  background-color: #7d77e8;\n  text-decoration: none;\n font-family: \"Gill Sans\", sans-serif; \n  padding: 8px 16px;\n  border-radius: 4px;\n  margin-bottom: 15px;\n   transition: all 250ms linear 0s;\n\n  :hover {\n    background-color: red;\n    color: #fff;\n  }\n`;\nconst Wrap = styled.span`\n  margin-right: 5px;\n  height: 20px;\n`;\nexport { BackLink, Container, Wrap };\n","import { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nimport { TbArrowBackUp } from 'react-icons/tb';\n\nimport getMovies from 'Api/api';\nimport FilmInfo from 'components/FilmInfo/FilmInfo';\nimport SharedLayout from 'components/SharedLayout/SharedLayout';\n\nimport { BackLink, Container, Wrap } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [filmDetails, setFilmDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovies(`movie/${movieId}`).then(res => setFilmDetails(res.data));\n  }, [movieId]);\n  const backHref = location.state?.from ?? '/movies';\n\n  return (\n    <Container>\n      <BackLink to={backHref}>\n        <Wrap>\n          <TbArrowBackUp size={20} />\n        </Wrap>\n        Return back\n      </BackLink>\n      <FilmInfo filmDetails={filmDetails} />\n      <SharedLayout location={location} />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","getMovies","endPoint","options","axios","response","console","error","Section","styled","Img","Container","MovieName","Title","Text","Wrap","filmDetails","poster_path","original_title","release_date","overview","vote_average","title","genres","date","Date","getFullYear","src","alt","Math","round","map","genre","name","id","Link","NavLink","List","Item","currentlocation","location","state","from","to","Suspense","fallback","BackLink","useState","setFilmDetails","movieId","useParams","useLocation","useEffect","then","res","data","backHref","size"],"sourceRoot":""}