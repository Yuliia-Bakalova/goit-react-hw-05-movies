{"version":3,"file":"static/js/387.71142794.chunk.js","mappings":"kLAEMA,EAAM,mCAGGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAUC,GAAnC,gGAE2BC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oBAAiCF,EAAjC,YAAwCG,IAFnE,cAEUE,EAFV,yBAIWA,GAJX,gCAMIC,QAAQC,MAAR,MANJ,gFAFAH,EAAAA,GAAAA,SAAAA,QAAyB,gCAYzB,IAZA,SAEyB,EAAVH,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,qJCHTO,EAAOC,EAAAA,EAAAA,GAAH,gSAaJC,EAAOD,EAAAA,EAAAA,GAAH,oOAQJE,EAAUF,EAAAA,EAAAA,IAAH,gFAKPG,EAAQH,EAAAA,EAAAA,EAAH,6CAGLI,EAAOJ,EAAAA,EAAAA,KAAH,6C,SCeV,EAtCa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,GAAU,UAAD,OAAWgB,EAAX,aAA8BG,MAAK,SAAAC,GAC1CL,EAAUK,EAAIC,KAAKC,KACpB,GACF,GAAE,CAACN,KAGF,SAACT,EAAD,UACGO,GACCA,EAAOS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC3C,OACE,UAAClB,EAAD,WACGe,GACC,SAACd,EAAD,CACEkB,IAAG,yCAAoCJ,GACvCK,IAAKJ,KAGP,SAACf,EAAD,CAASkB,IAAKE,EAAOD,IAAKJ,KAG5B,UAACd,EAAD,qBACQ,SAACC,EAAD,UAAOa,QAEf,UAACd,EAAD,0BACa,SAACC,EAAD,UAAOc,SAdXC,EAkBd,KAGR,C","sources":["Api/api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7cc6d6f36e893764d456caf842646015';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endPoint, options) {\n  try {\n    const response = await axios.get(`${endPoint}?api_key=${KEY}&${options}`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovies;\n","import styled from '@emotion/styled';\n\nconst List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 16px;\n  margin-top: 30px;\n  margin-bottom: 50px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n\n`;\nconst Item = styled.li`\n  text-align: center;\n  border-radius: 2px;\n  margin-bottom: 25px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n \n`;\nconst CastImg = styled.img`\n    width: 100%;\n  height: 82%;\n  object-fit: cover;\n`;\nconst Title = styled.p`\n  font-weight: 600;\n`;\nconst Text = styled.span`\n  font-weight: 400;\n`;\n\nexport { List, CastImg, Item, Text, Title };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport getMovies from 'Api/api';\nimport Image from '../../images/image_default.jpg';\n\nimport { List, CastImg, Item, Text, Title } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovies(`/movie/${movieId}/credits`).then(res => {\n      setActors(res.data.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <List>\n      {actors &&\n        actors.map(({ profile_path, name, character, id }) => {\n          return (\n            <Item key={id}>\n              {profile_path ? (\n                <CastImg\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={name}\n                />\n              ) : (\n                <CastImg src={Image} alt={name} />\n              )}\n\n              <Title>\n                Name: <Text>{name}</Text>\n              </Title>\n              <Title>\n                Character: <Text>{character}</Text>\n              </Title>\n            </Item>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default Cast;\n"],"names":["KEY","getMovies","endPoint","options","axios","response","console","error","List","styled","Item","CastImg","Title","Text","useState","actors","setActors","movieId","useParams","useEffect","then","res","data","cast","map","profile_path","name","character","id","src","alt","Image"],"sourceRoot":""}